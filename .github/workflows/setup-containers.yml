name: Build and deliver containers

on: push

jobs:
  userservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver user-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./backend/UserApplication
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build --build-arg DB_NAME=${{ secrets.USER_DB_NAME }} -t ${{ secrets.DOCKER_USER }}/user-service:latest ./backend/UserApplication

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/user-service:latest
  ingredientservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver ingredient-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./backend/IngredientsApplication
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build  --build-arg DB_NAME=${{ secrets.INGREDIENT_DB_NAME }} -t ${{ secrets.DOCKER_USER }}/ingredient-service:latest ./backend/IngredientsApplication

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/ingredient-service:latest
  recipeservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver recipe-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./backend/RecipeApplication
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build --build-arg DB_NAME=${{ secrets.RECIPE_DB_NAME }} --build-arg DB_USER=${{ secrets.RECIPE_DB_USER }} --build-arg=${{ secrets.RECIPE_DB_PASSWORD }} -t ${{ secrets.DOCKER_USER }}/recipe-service:latest ./backend/RecipeApplication

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/recipe-service:latest
  apigateway:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver api-gateway container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./backend/ApiGateway
        run: mvn package -B -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build --build-arg GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} --build-arg GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} -t ${{ secrets.DOCKER_USER }}/api-gateway:latest ./backend/ApiGateway

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/api-gateway:latest
