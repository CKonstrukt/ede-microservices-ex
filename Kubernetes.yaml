apiVersion: v1

items:
  - apiVersion: v1

    kind: Service

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: api-gateway

      name: api-gateway

    spec:
      ports:
        - name: "8083"

          port: 8083

          targetPort: 8083

      selector:
        io.kompose.service: api-gateway

    status:
      loadBalancer: {}

  - apiVersion: v1

    kind: Service

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: ingredient-service

      name: ingredient-service

    spec:
      ports:
        - name: "8082"

          port: 8082

          targetPort: 8082

      selector:
        io.kompose.service: ingredient-service

    status:
      loadBalancer: {}

  - apiVersion: v1

    kind: Service

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: mongo-ingredient

      name: mongo-ingredient

    spec:
      ports:
        - name: "27018"

          port: 27018

          targetPort: 27017

      selector:
        io.kompose.service: mongo-ingredient

    status:
      loadBalancer: {}

  - apiVersion: v1

    kind: Service

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: mongo-user

      name: mongo-user

    spec:
      ports:
        - name: "27017"

          port: 27017

          targetPort: 27017

      selector:
        io.kompose.service: mongo-user

    status:
      loadBalancer: {}

  - apiVersion: v1

    kind: Service

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: postgres-recipe

      name: postgres-recipe

    spec:
      ports:
        - name: "5432"

          port: 5432

          targetPort: 5432

      selector:
        io.kompose.service: postgres-recipe

    status:
      loadBalancer: {}

  - apiVersion: v1

    kind: Service

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: recipe-service

      name: recipe-service

    spec:
      ports:
        - name: "8080"

          port: 8080

          targetPort: 8080

      selector:
        io.kompose.service: recipe-service

    status:
      loadBalancer: {}

  - apiVersion: v1

    kind: Service

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: user-service

      name: user-service

    spec:
      ports:
        - name: "8081"

          port: 8081

          targetPort: 8081

      selector:
        io.kompose.service: user-service

    status:
      loadBalancer: {}

  - apiVersion: apps/v1

    kind: Deployment

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: api-gateway

      name: api-gateway

    spec:
      replicas: 1

      selector:
        matchLabels:
          io.kompose.service: api-gateway

      strategy: {}

      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

            kompose.version: 1.26.0 (40646f47)

          creationTimestamp: null

          labels:
            io.kompose.service: api-gateway

        spec:
          containers:
            - env:
                - name: INGREDIENT_SERVICE_BASEURL

                  value: ingredient-service:8082

                - name: RECIPE_SERVICE_BASEURL

                  value: recipe-service:8080

                - name: USER_SERVICE_BASEURL

                  value: user-service:8081

              image: r0881427/api-gateway

              name: api-gateway

              ports:
                - containerPort: 8083

              resources: {}

          restartPolicy: Always

    status: {}

  - apiVersion: apps/v1

    kind: Deployment

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: ingredient-service

      name: ingredient-service

    spec:
      replicas: 1

      selector:
        matchLabels:
          io.kompose.service: ingredient-service

      strategy: {}

      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

            kompose.version: 1.26.0 (40646f47)

          creationTimestamp: null

          labels:
            io.kompose.service: ingredient-service

        spec:
          containers:
            - env:
                - name: DB_HOST

                  value: mongo-ingredient

                - name: DB_NAME

                  value: ingredientdb

                - name: DB_PORT

                  value: "27018"

              image: r0881427/ingredient-service

              name: ingredient-service

              ports:
                - containerPort: 8082

              resources: {}

          restartPolicy: Always

    status: {}

  - apiVersion: apps/v1

    kind: Deployment

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: mongo-ingredient

      name: mongo-ingredient

    spec:
      replicas: 1

      selector:
        matchLabels:
          io.kompose.service: mongo-ingredient

      strategy:
        type: Recreate

      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

            kompose.version: 1.26.0 (40646f47)

          creationTimestamp: null

          labels:
            io.kompose.service: mongo-ingredient

        spec:
          containers:
            - image: mongo:latest

              name: mongo-ingredient

              ports:
                - containerPort: 27017

              resources: {}

              volumeMounts:
                - mountPath: /data/db

                  name: mongodb-ingredient-data

          restartPolicy: Always

          volumes:
            - name: mongodb-ingredient-data

              persistentVolumeClaim:
                claimName: mongodb-ingredient-data

    status: {}

  - apiVersion: v1

    kind: PersistentVolumeClaim

    metadata:
      creationTimestamp: null

      labels:
        io.kompose.service: mongodb-ingredient-data

      name: mongodb-ingredient-data

    spec:
      accessModes:
        - ReadWriteOnce

      resources:
        requests:
          storage: 100Mi

    status: {}

  - apiVersion: apps/v1

    kind: Deployment

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: mongo-user

      name: mongo-user

    spec:
      replicas: 1

      selector:
        matchLabels:
          io.kompose.service: mongo-user

      strategy:
        type: Recreate

      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

            kompose.version: 1.26.0 (40646f47)

          creationTimestamp: null

          labels:
            io.kompose.service: mongo-user

        spec:
          containers:
            - image: mongo:latest

              name: mongo-user

              ports:
                - containerPort: 27017

              resources: {}

              volumeMounts:
                - mountPath: /data/db

                  name: mongodb-user-data

          restartPolicy: Always

          volumes:
            - name: mongodb-user-data

              persistentVolumeClaim:
                claimName: mongodb-user-data

    status: {}

  - apiVersion: v1

    kind: PersistentVolumeClaim

    metadata:
      creationTimestamp: null

      labels:
        io.kompose.service: mongodb-user-data

      name: mongodb-user-data

    spec:
      accessModes:
        - ReadWriteOnce

      resources:
        requests:
          storage: 100Mi

    status: {}

  - apiVersion: apps/v1

    kind: Deployment

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: postgres-recipe

      name: postgres-recipe

    spec:
      replicas: 1

      selector:
        matchLabels:
          io.kompose.service: postgres-recipe

      strategy:
        type: Recreate

      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

            kompose.version: 1.26.0 (40646f47)

          creationTimestamp: null

          labels:
            io.kompose.service: postgres-recipe

        spec:
          containers:
            - env:
                - name: POSTGRES_DB

                  value: recipedb

                - name: POSTGRES_PASSWORD

                  value: recipe-passworD-@@@

              image: postgres:16-alpine

              name: postgres-recipe

              ports:
                - containerPort: 5432

              resources: {}

              volumeMounts:
                - mountPath: /var/lib/postgresql/data

                  name: postgres-recipe-data

          restartPolicy: Always

          volumes:
            - name: postgres-recipe-data

              persistentVolumeClaim:
                claimName: postgres-recipe-data

    status: {}

  - apiVersion: v1

    kind: PersistentVolumeClaim

    metadata:
      creationTimestamp: null

      labels:
        io.kompose.service: postgres-recipe-data

      name: postgres-recipe-data

    spec:
      accessModes:
        - ReadWriteOnce

      resources:
        requests:
          storage: 100Mi

    status: {}

  - apiVersion: apps/v1

    kind: Deployment

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: recipe-service

      name: recipe-service

    spec:
      replicas: 1

      selector:
        matchLabels:
          io.kompose.service: recipe-service

      strategy: {}

      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

            kompose.version: 1.26.0 (40646f47)

          creationTimestamp: null

          labels:
            io.kompose.service: recipe-service

        spec:
          containers:
            - env:
                - name: DB_HOST

                  value: postgres-recipe

                - name: DB_NAME

                  value: recipedb

                - name: DB_PASSWORD

                  value: recipe-passworD-@@@

                - name: DB_PORT

                  value: "5432"

                - name: DB_USER

                  value: postgres

                - name: INGREDIENT_SERVICE_BASE_URL

                  value: ingredient-service:8082

                - name: USER_SERVICE_BASE_URL

                  value: user-service:8081

              image: r0881427/recipe-service

              name: recipe-service

              ports:
                - containerPort: 8080

              resources: {}

          restartPolicy: Always

    status: {}

  - apiVersion: apps/v1

    kind: Deployment

    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

        kompose.version: 1.26.0 (40646f47)

      creationTimestamp: null

      labels:
        io.kompose.service: user-service

      name: user-service

    spec:
      replicas: 1

      selector:
        matchLabels:
          io.kompose.service: user-service

      strategy: {}

      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o Kubernetes.yaml

            kompose.version: 1.26.0 (40646f47)

          creationTimestamp: null

          labels:
            io.kompose.service: user-service

        spec:
          containers:
            - env:
                - name: DB_HOST

                  value: mongo-user

                - name: DB_NAME

                  value: userdb

                - name: DB_PORT

                  value: "27017"

              image: r0881427/user-service

              name: user-service

              ports:
                - containerPort: 8081

              resources: {}

          restartPolicy: Always

    status: {}

kind: List

metadata: {}
